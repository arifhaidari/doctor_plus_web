"""
Django settings for DoctorPlus project.

Generated by 'django-admin startproject' using Django 3.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
from pathlib import Path
from datetime import timedelta

# docker run -p 6379:6379 -d redis:5

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "y&-rlatus71zq=p4s29zsd&ynhb3w8^3!8k*mx=%a3qdjrh9!m"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = ["*", 'doctor-venv.eba-izfqpeur.us-west-2.elasticbeanstalk.com']
# CORS_ORIGIN_WHITELIST = ("http://127.0.0.1:8000", "http://127.0.0.1:8000")

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

# Application definition

INSTALLED_APPS = [
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # system
    "colorfield",
    "admin_interface",
    "django.contrib.admin",
    # "livereload",
    "bootstrap4",
    "mathfilters",
    "corsheaders",
    "channels",
    "nested_admin",
    "django_cleanup.apps.CleanupConfig",
    # allauth
    "django.contrib.sites",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    "allauth.socialaccount.providers.facebook",
    "django_extensions",
    # api
    # xx
    "rest_framework",
    "rest_framework.authtoken",
    "drf_multiple_model",
    "dj_rest_auth",
    "dj_rest_auth.registration",
    "django_rest_passwordreset",
    # my apps
    "chat",
    "blog",
    "home",
    "user",
    "doctor",
    "patient",
    "relative",
    "medicalrecord",
    "appointment",
    "notification",
    "adminplus",
]


MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "corsheaders.middleware.CorsPostCsrfMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # live reload
    # "livereload.middleware.LiveReloadScript",
]

ROOT_URLCONF = "DoctorPlus.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "django.template.context_processors.static",
            ]
        },
    }
]

WSGI_APPLICATION = "DoctorPlus.wsgi.application"
CORS_ORIGIN_ALLOW_ALL = True

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        # "NAME": str(BASE_DIR / "db.sqlite3.4.1"),
        "NAME": str(BASE_DIR / "db.sqlite3"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Kabul"

USE_I18N = True
USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = "static_root/"
STATICFILES_DIRS = [BASE_DIR / "static"]

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# LOGIN_URL = "/login/"
LOGIN_URL = "/user/login/"
LOGOUT_URL = "/"
LOGIN_URL_REDIRECT = "/"
LOGOUT_REDIRECT_URL = "/"

AUTH_USER_MODEL = "user.User"  # change the built-in user model to ours

# Redis Channels and override WSGI application with ASGI
ASGI_APPLICATION = 'DoctorPlus.asgi.application'

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            # "hosts": [("192.168.0.136", 6379)],
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}

X_FRAME_OPTIONS = "ALLOWALL"
XS_SHARING_ALLOWED_METHODS = ["POST", "GET", "OPTIONS", "PUT"]

# disabling the number of GET/POST parameters exceeded settings.DATA_UPLOAD_MAX_NUMBER_FIELDS
DATA_UPLOAD_MAX_NUMBER_FIELDS = None  # the default is 1000

# django 3.2 auto field enable
DEFAULT_AUTO_FIELD = "django.db.models.AutoField"

PAGINATION_PAGE_SIZE = 20

# Eblis configuration
from rest_api.utils.main import *

# all auth
AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    "django.contrib.auth.backends.ModelBackend",
    # `allauth` specific authentication methods, such as login by e-mail
    "allauth.account.auth_backends.AuthenticationBackend",
]
SITE_ID = 1
LOGIN_REDIRECT_URL = "/user/socialadp/"
ACCOUNT_DEFAULT_HTTP_PROTOCOL = "https"
ACCOUNT_USER_MODEL_USERNAME_FIELD = "phone"  # switches username to phone for allauth
# ACCOUNT_AUTHENTICATION_METHOD = "email"
# ACCOUNT_EMAIL_REQUIRED = True
# ACCOUNT_UNIQUE_EMAIL = True

ACCOUNT_ADAPTER = "DoctorPlus.allauthAdapter.MyDefaultAccountAdapter"
SOCIALACCOUNT_ADAPTER = "DoctorPlus.allauthAdapter.MyDefaultSocialAccountAdapter"

SOCIALACCOUNT_PROVIDERS = {
    "facebook": {
        # 'METHOD': 'oauth2',
        # 'SDK_URL': '//connect.facebook.net/{locale}/sdk.js',
        "SCOPE": [
            "email",
            "public_profile",
            "user_friends",
            "user_gender",
            "user_birthday",
            "user_location",
            "user_link",
            "user_age_range",
        ],
        # 'AUTH_PARAMS': {'auth_type': 'reauthenticate'},
        # 'INIT_PARAMS': {'cookie': True},
        "FIELDS": [
            "id",
            "first_name",
            "last_name",
            "middle_name",
            "name",
            "short_name",
            "name_format",
            "gender",
            "birthday",
            "age_range",
            "friends",
            "location",
            "picture",
            "link",
        ],
        "EXCHANGE_TOKEN": True,
        "VERIFIED_EMAIL": False,
        # 'LOCALE_FUNC': 'path.to.callable',
        "VERSION": "v7.0",
    },
    "google": {
        "SCOPE": [
            # 'profile',
            # 'email',
            "https://www.googleapis.com/auth/userinfo.profile",
            "https://www.googleapis.com/auth/userinfo.email",
            "https://www.googleapis.com/auth/user.emails.read",
            "https://www.googleapis.com/auth/user.phonenumbers.read",
            "https://www.googleapis.com/auth/user.birthday.read",
            "https://www.googleapis.com/auth/profile.agerange.read",
            "https://www.googleapis.com/auth/user.addresses.read",
        ],
        "FIELDS": [
            "gender",
        ],
        "AUTH_PARAMS": {
            "access_type": "online",
        },
    },
}


# as we are not using any email service so we print the email to console
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'